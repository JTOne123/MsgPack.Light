jobs:
- job: macOsBuild
  pool:
    name: Hosted macOS
  steps:
    - template: .azure/builds.yml

- job: macOsTest
  dependsOn:
  - macOsBuild
  pool:
    name: Hosted macOS
  steps:
    - template: .azure/tests.yml

- job: linuxBuild
  pool:
    name: Hosted Ubuntu 1604
  steps:
    - template: .azure/builds.yml

- job: linuxTest
  dependsOn:
  - linuxBuild
  pool:
    name: Hosted Ubuntu 1604
  steps:
    - script: curl -sSL https://dot.net/v1/dotnet-install.sh | bash /dev/stdin -channel 1.1
      displayName: Installing .netcore 1.1
    - template: .azure/tests.yml
      parameters:
        netcore1Global: false

- job: winBuild
  pool:
    name: Hosted VS2017
  steps:
    - template: .azure/builds.yml
      parameters:
        fullNet: true

- job: winTest
  dependsOn:
  - winBuild
  pool:
    name: Hosted VS2017
  steps:
    - template: .azure/tests.yml
      parameters:
        fullNet: true

- job: pushToNuget
  dependsOn:
  - macOsTest
  - linuxTest
  - winTest
  pool:
    name: Hosted VS2017
  steps:
    - task: Bash@3
      displayName: set version variable
      inputs:
        targetType: inline
        script: echo "##vso[task.setvariable variable=NugetPackageVersion]$(git describe --tags | sed 's/-/./')"
    - task: DotNetCoreCLI@2
      displayName: pack nuget package
      inputs:
        command: pack
        versioningScheme: byEnvVar
        versionEnvVar: NugetPackageVersion
        arguments: -c Release /property:PackageOutputPath=$(Build.ArtifactStagingDirectory)
    - task: NuGetCommand@2
      displayName: 'NuGet push'
      inputs:
        command: push
        packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg'
        nuGetFeedType: external
        publishFeedCredentials: api.nuget.org
    - task: PublishBuildArtifacts@1
      inputs:
        pathtoPublish: '$(Build.ArtifactStagingDirectory)'
        artifactName: nupkgs